//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public RelativePositionComponent relativePosition { get { return (RelativePositionComponent)GetComponent(ComponentIds.RelativePosition); } }

        public bool hasRelativePosition { get { return HasComponent(ComponentIds.RelativePosition); } }

        public Entity AddRelativePosition(float newX, float newY) {
            var component = CreateComponent<RelativePositionComponent>(ComponentIds.RelativePosition);
            component.x = newX;
            component.y = newY;
            return AddComponent(ComponentIds.RelativePosition, component);
        }

        public Entity ReplaceRelativePosition(float newX, float newY) {
            var component = CreateComponent<RelativePositionComponent>(ComponentIds.RelativePosition);
            component.x = newX;
            component.y = newY;
            ReplaceComponent(ComponentIds.RelativePosition, component);
            return this;
        }

        public Entity RemoveRelativePosition() {
            return RemoveComponent(ComponentIds.RelativePosition);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherRelativePosition;

        public static IMatcher RelativePosition {
            get {
                if (_matcherRelativePosition == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.RelativePosition);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherRelativePosition = matcher;
                }

                return _matcherRelativePosition;
            }
        }
    }
}
