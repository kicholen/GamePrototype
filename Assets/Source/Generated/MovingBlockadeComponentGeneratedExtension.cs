//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public MovingBlockadeComponent movingBlockade { get { return (MovingBlockadeComponent)GetComponent(ComponentIds.MovingBlockade); } }

        public bool hasMovingBlockade { get { return HasComponent(ComponentIds.MovingBlockade); } }

        public Entity AddMovingBlockade(float newOffset, float newDirection, float newTime, float newDuration, float newStopDuration) {
            var component = CreateComponent<MovingBlockadeComponent>(ComponentIds.MovingBlockade);
            component.offset = newOffset;
            component.direction = newDirection;
            component.time = newTime;
            component.duration = newDuration;
            component.stopDuration = newStopDuration;
            return AddComponent(ComponentIds.MovingBlockade, component);
        }

        public Entity ReplaceMovingBlockade(float newOffset, float newDirection, float newTime, float newDuration, float newStopDuration) {
            var component = CreateComponent<MovingBlockadeComponent>(ComponentIds.MovingBlockade);
            component.offset = newOffset;
            component.direction = newDirection;
            component.time = newTime;
            component.duration = newDuration;
            component.stopDuration = newStopDuration;
            ReplaceComponent(ComponentIds.MovingBlockade, component);
            return this;
        }

        public Entity RemoveMovingBlockade() {
            return RemoveComponent(ComponentIds.MovingBlockade);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherMovingBlockade;

        public static IMatcher MovingBlockade {
            get {
                if (_matcherMovingBlockade == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.MovingBlockade);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherMovingBlockade = matcher;
                }

                return _matcherMovingBlockade;
            }
        }
    }
}
