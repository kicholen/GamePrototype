//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public MaterialReferenceComponent materialReference { get { return (MaterialReferenceComponent)GetComponent(ComponentIds.MaterialReference); } }

        public bool hasMaterialReference { get { return HasComponent(ComponentIds.MaterialReference); } }

        public Entity AddMaterialReference(MaterialStorage newStorage) {
            var component = CreateComponent<MaterialReferenceComponent>(ComponentIds.MaterialReference);
            component.storage = newStorage;
            return AddComponent(ComponentIds.MaterialReference, component);
        }

        public Entity ReplaceMaterialReference(MaterialStorage newStorage) {
            var component = CreateComponent<MaterialReferenceComponent>(ComponentIds.MaterialReference);
            component.storage = newStorage;
            ReplaceComponent(ComponentIds.MaterialReference, component);
            return this;
        }

        public Entity RemoveMaterialReference() {
            return RemoveComponent(ComponentIds.MaterialReference);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherMaterialReference;

        public static IMatcher MaterialReference {
            get {
                if (_matcherMaterialReference == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.MaterialReference);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherMaterialReference = matcher;
                }

                return _matcherMaterialReference;
            }
        }
    }
}
